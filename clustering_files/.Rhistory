q()
q()
knitr::opts_chunk$set(echo = TRUE)
LicaPopular <- datos[order(datos$popularity,decreasing = TRUE),]
datos <- read.csv("movies.csv")
LicaPopular <- datos[order(datos$popularity,decreasing = TRUE),]
top20 <- LicaPopular[1:20,c("genres")]
genres20 <- unlist(strsplit(as.character(top20), "\\|"))
genres20
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
topGenre20 <- getmode(genres20)
topGenre20
totalGenres <- unlist(strsplit(as.character(datos$genres), "\\|"))
barplot(table(totalGenres))
knitr::opts_chunk$set(echo = TRUE)
revenueByMovie <- order(datos$revenue, decreasing = T)
head(datos[revenueByMovie,c("actorsAmount","revenue","title")])
datos <- read.csv("movies.csv")
summary(datos)
str(datos)
worstvalue <- order(datos$voteAvg, decreasing = T)
head(datos[worstvalue,c("voteAvg","title")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title","original_title")])
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$orig, decreasing = F)
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","originalTitle")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title","voteCount")])
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title")])
topcount <- head(order(datos$voteCount, decreasing = T), n=1)
datos[topcount,c("title","voteCount")]
worstvalue <- order(datos$voteAvg, decreasing = F)
head(datos[worstvalue,c("voteAvg","title", "voteCount")])
worstvalue <- order(datos$voteAvg, decreasing = T)
head(datos[worstvalue,c("voteAvg","title", "voteCount")])
topcount <- head(order(datos$voteCount, decreasing = T), n=15)
datos[topcount,c("title","voteCount")]
topcount <- head(order(datos$voteCount, decreasing = T), n=15)
datos[topcount,c("title","voteCount","voteAvg")]
topcount <- head(order(datos$voteCount, decreasing = T), n=15)
datos[topcount,c("title","voteCount")]
worstvalue <- order(datos$voteAvg, decreasing = T,n=1)
worstvalue <- order(datos$voteAvg, decreasing = T),n=1)
worstvalue <- head(order(datos$voteAvg, decreasing = T),n=1)
head(datos[worstvalue,c("voteAvg","title", "voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title", "voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title")])
#title, titulo
#releaseDAte, fecha de lanzamiento
Dates <- data.frame(datos$title, datos$releaseDate)
PorAnioDesc <- data.frame(Dates[order(Dates$datos.releaseDate),])
year1 <- data.frame(table(substring(PorAnioDesc$datos.releaseDate,1,4)))
finales <- as.numeric(substring(PorAnioDesc$datos.releaseDate,1,4))
hist(finales,breaks = 100)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
gananciasVSpresupuesto <- order(datos$budget, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title","voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = T),n=1)
head(datos[worstvalue,c("voteAvg","title","voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title","voteCount")])
worstvalue <- head(order(datos$voteAvg, decreasing = F),n=1)
head(datos[worstvalue,c("voteAvg","title")])
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(datos$budget)
plot(x = datos$budget, y = datos$revenue)
presupuesto <- data.frame(datos$budget, datos$originalTitle)
ingresos <- data.frame(datos$revenue, datos$originalTitle)
presupuesto <- data.frame(datos$budget, datos$originalTitle)
ingresos <- data.frame(datos$revenue, datos$originalTitle)
plot(presupuesto[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
plot(x = datos$revenue, y = datos$revenue)
plot(x = datos$revenue, y = datos$budget)
plot(x = datos$revenue, y = datos$budget)
qqline(datos$revenue,col="red")
plot(x = datos$revenue, y = datos$budget)
qqline(datos$budget,col="red")
plot(x = datos$revenue, y = datos$budget)
qqline(datos$revenue,col="red")
qqnorm(x = datos$revenue, y = datos$budget)
qqline(datos$revenue,col="red")
qqnorm(y = datos$revenue, x = datos$budget)
qqline(datos$revenue,col="red")
qqnorm( x = datos$budget, y = datos$revenue,)
qqline(datos$revenue,col="red")
boxplot(x = datos$budget, y = datos$revenue)
hist(x = datos$budget, y = datos$revenue)
hist(datos$budget, datos$revenue)
hist(datos$budget, datos$revenue)
hist(datos$budget)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
hist(gananciasVSpresupuesto)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
hist(gananciasVSpresupuesto$revenue)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
hist(datos$revenue)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
hist(datos$revenue,c("revenue","title"))
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
qqnorm( Y = datos$budget, X = datos$revenue,)
qqnorm( x = datos$budget, y = datos$revenue,)
qqline(datos$revenue,col="red")
plot( x = datos$budget, y = datos$revenue,)
qqline(datos$revenue,col="red")
qqnorm( x = datos$budget, y = datos$revenue,)
qqline(datos$revenue,col="red")
qqnorm(x = datos$revenue,  y = datos$budget, )
qqline(datos$revenue,col="red")
qqnorm(y = datos$revenue,  x = datos$budget, )
qqline(datos$revenue,col="red")
qqnorm(x = datos$budget, y = datos$revenue)
qqline(datos$revenue,col="red")
qqnorm(x = datos$budget, y = datos$revenue)
qqline(datos$budget,col="red")
qqnorm(x = datos$budget, y = datos$revenue)
qqline(datos$revenue,col="red")
qqnorm(x = datos$budget, y = datos$revenue)
mesvsingresos <- order(datos$revenue, decreasing = T)
head(datos[mesvsingresos,c("relaseDate","revenue","title")])
mesvsingresos <- order(datos$revenue, decreasing = T)
head(datos[mesvsingresos,c("releaseDate","revenue","title")])
install.packages("tidyverse")
library(tydyr)
library(tydyr)
library(tidyr)
#mesvsingresos <- order(datos$revenue, decreasing = T)
#head(datos[mesvsingresos,c("releaseDate","revenue","title")])
mesvsingresos <- separate(df, col = relaseDate, into=c("year", "month", "day"), sep="-")
mesvsingresos <- separate(df, col = relaseDate, into=c("year", "month", "day"), sep="-")
mesvsingresos <- separate(datos$releaseDate, col = relaseDate, into=c("year", "month", "day"), sep="-")
mesvsingresos <- separate(datos$releaseDate, col = relaseDate, into=c('year', 'month', 'day'), sep='-')
mesvsingresos %>% separate(datos$releaseDate, col = relaseDate, into=c('year', 'month', 'day'), sep='-')
mesvsingresos %>% separate(datos$releaseDate, col = relaseDate, into=c('year', 'month', 'day'), sep='-')
mesvsingresos <- separate(datos$releaseDate, col = relaseDate, c('year', 'month', 'day'), sep='-')
mesvsingresos <- separate(datos$releaseDate, relaseDate, c('year', 'month', 'day'), sep='-')
mesvsingresos %>% separate(datos$releaseDate, relaseDate, c('year', 'month', 'day'), sep='-')
mesvsingresos %>% separate(datos, relaseDate, c('year', 'month', 'day'), sep='-')
mesvsingresos <- separate(datos, relaseDate, c('year', 'month', 'day'), sep='-')
datos %>% separate(relaseDate, c('year', 'month', 'day'), sep='-')
qqnorm(x = datos$budget, y = datos$revenue)
datos %>% separate(datos$relaseDate, c('year', 'month', 'day'), sep='-')
datos %>% separate(dato, relaseDate, c('year', 'month', 'day'), sep='-')
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
qqnorm(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
correlacion <- data.frame(datos$revenue, datos$voteAvg, datos$originalTitle)
plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(x = datos$voteAvg, y = datos$revenue)
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue)
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion". x="ingresos", y="calificación")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion". xlab="ingresos", ylab="calificación")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion", xlab="ingresos", ylab="calificación")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion", x="ingresos", y="calificación")
#ingresos <- data.frame(datos$budget, datos$revenue, datos$originalTitle)
#correlacion <- data.frame(datos$revenue, datos$voteCount, datos$originalTitle)
#plot(correlacion[,2], ingresos[,1], main="Diagrama de Dispersion", xlab="voteCount", ylab="Revenue")
#abline(lm(ingresos[,1]~correlacion[,2]), col="blue")
qqnorm(y = datos$voteAvg, x = datos$revenue, main="Diagrama de Dispersion")
date <- datos %>% separate(relaseDate, c("y", "m", "d"), sep = "-")
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(datos[gananciasVSpresupuesto,c("m","revenue","title")])
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")])
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=30)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=100)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=1000)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=10000)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")], n=100000)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m"=12,"revenue","title")],)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
hist(date$m)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
hist(date)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
str(date)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
str(date)
hist(date$m)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
str(date)
date$m <-as.numeric(date$m)
meses = date$m
kurtosis(meses, na.rm = T)
??kurtosis
library(dplyr)
library(ggplot2)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
str(date)
date$m <-as.numeric(date$m)
meses = date$m
kurtosis(meses, na.rm = T)
library(kurtosis)
library("kurtosis")
revenue = datos$revenue
kurtosis(revenue)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
sort(table(date$m), TRUE)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
r <- order(date$revenue, decreasing = T)
head(date[r,c("m","revenue","title")],)
knitr::opts_chunk$set(echo = TRUE)
gananciasVSpresupuesto <- order(datos$revenue, decreasing = T)
head(datos[gananciasVSpresupuesto,c("budget","revenue","title")])
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
library(tidyr)
date <- datos %>% separate(releaseDate, c("y", "m", "d"), sep = "-")
gananciasVSpresupuesto <- order(date$m, decreasing = T)
head(date[gananciasVSpresupuesto,c("m","revenue","title")],)
duracion <- order(datos$runtime, decreasing = T)
head(datos[duracion,c("runtime","genres","title")])
knitr::opts_chunk$set(echo = TRUE)
# Utilizados en el laboratorio
library(hopkins)
km<-kmeans(clustering,NClusters,iter.max =100)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
# Utilizados en el laboratorio
library(hopkins)
library(ggplot2)
library(factoextra)
library(fpc)
library(cluster)
datos <- read.csv("movies.csv")
#numericas <- datos[,c("popularity","budget","revenue","runtime","genreAmount","productionCoAmount")]
#hopkins()
datos<-datos[complete.cases(read.csv("movies.csv")),]
popularity<-datos[,'popularity']
budget<-datos[,'budget']
revenue<-datos[,'revenue']
runtime<-datos[,'runtime']
voteCount<-datos[,'voteCount']
norm<-data.frame(popularity,budget,revenue,runtime,voteCount)
clustering<-scale(norm)
hopkins(clustering)
DistData<- dist(clustering)
knitr::opts_chunk$set(fig.width=12, fig.height=8)
fviz_dist(DistData, show_labels = F)
wss <- (nrow(clustering)-1)*sum(apply(clustering,2,var))
for (i in 1:10)
wss[i] <- sum(kmeans(clustering, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
NClusters <- 6
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,km$cluster)
Matrix<- dist(clustering)
hc<-hclust(DistData, method = "ward.D2")
plot(hc, cex=0.5, axes=FALSE)
#silueta
fviz_cluster(km, data = clustering,geom = "point", ellipse.type = "norm")
SiluetaK<-silhouette(km$cluster,dist(clustering))
mean(SiluetaK[,3])
Kmean<-mean(SiluetaK[,3])
plot(SiluetaK, cex.names=.4, col=1:3, border=NA)
# silueta
rect.hclust(hc,k=3)
# silueta
rect.hclust(hc,k=3)
Matrix<- dist(clustering)
hc<-hclust(DistData, method = "ward.D2")
plot(hc, cex=0.5, axes=FALSE)
# silueta
rect.hclust(hc,k=3)
groups<-cutree(hc,k=3)
datos$gruposHC<-groups
silhc<-silhouette(groups,DistData)
mean(silhc[,3])
Jerarquico<-mean(silhc[,3])
plot(silhc, cex.names=.4, col=1:3, border = NA)
install.packages("dplyr")
install.packages("dplyr")
}
install.packages("dplyr")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
# Utilizados en el laboratorio
library(hopkins)
library(ggplot2)
library(factoextra)
library(fpc)
library(cluster)
datos <- read.csv("movies.csv")
library(dplyr)
library(ggplot2)
# Utilizados en el laboratorio
library(hopkins)
library(ggplot2)
library(factoextra)
library(fpc)
library(cluster)
datos <- read.csv("movies.csv")
with(norm, median(voteCount))
library(dplyr)
library(ggplot2)
# Utilizados en el laboratorio
library(hopkins)
library(ggplot2)
library(factoextra)
library(fpc)
library(cluster)
datos <- read.csv("movies.csv")
#numericas <- datos[,c("popularity","budget","revenue","runtime","genreAmount","productionCoAmount")]
#hopkins()
datos<-datos[complete.cases(read.csv("movies.csv")),]
popularity<-datos[,'popularity']
budget<-datos[,'budget']
revenue<-datos[,'revenue']
runtime<-datos[,'runtime']
voteCount<-datos[,'voteCount']
norm<-data.frame(popularity,budget,revenue,runtime,voteCount)
clustering<-scale(norm)
hopkins(clustering)
DistData<- dist(clustering)
knitr::opts_chunk$set(fig.width=12, fig.height=8)
fviz_dist(DistData, show_labels = F)
wss <- (nrow(clustering)-1)*sum(apply(clustering,2,var))
for (i in 1:10)
wss[i] <- sum(kmeans(clustering, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
NClusters <- 6
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,km$cluster)
Matrix<- dist(clustering)
hc<-hclust(DistData, method = "ward.D2")
plot(hc, cex=0.5, axes=FALSE)
# silueta
rect.hclust(hc,k=3)
groups<-cutree(hc,k=3)
datos$gruposHC<-groups
silhc<-silhouette(groups,DistData)
mean(silhc[,3])
Jerarquico<-mean(silhc[,3])
plot(silhc, cex.names=.4, col=1:3, border = NA)
#silueta
fviz_cluster(km, data = clustering,geom = "point", ellipse.type = "norm")
SiluetaK<-silhouette(km$cluster,dist(clustering))
mean(SiluetaK[,3])
Kmean<-mean(SiluetaK[,3])
plot(SiluetaK, cex.names=.4, col=1:3, border=NA)
mean(x = norm$popularity, na.rm = TRUE)
mean(x = norm$budget, na.rm = TRUE)
mean(x = norm$revenue, na.rm = TRUE)
mean(x = norm$runtime, na.rm = TRUE)
round(mean(x = norm$voteCount, na.rm = TRUE))
tabla <- table(norm$popularity)
head(sort(tabla, decreasing = TRUE), n = 15)
tabla <- table(norm$budget)
head(sort(tabla, decreasing = TRUE), n = 15)
tabla <- table(norm$revenue)
head(sort(tabla, decreasing = TRUE), n = 15)
tabla <- table(norm$runtime)
head(sort(tabla, decreasing = TRUE), n = 15)
tabla <- table(norm$voteCount)
head(sort(tabla, decreasing = TRUE), n = 15)
with(norm, median(popularity))
with(norm, median(budget))
with(norm, median(revenue))
with(norm, median(runtime))
with(norm, median(voteCount))
setwd("C:/Users/estra/OneDrive/Documentos/GitHub/HojaT2-Clustering-MineriaDeDatos/clustering_files")
