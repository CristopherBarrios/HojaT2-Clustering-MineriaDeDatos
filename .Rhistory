?data.frame
?Head
?head
?order
knitr::opts_chunk$set(echo = TRUE)
revenueByMovie <- order(datos$revenue, decreasing = T)
?separate
setwd("C:/Users/cjrba/OneDrive/Documentos/Universidad/2023/mineria/HojaT2-Clustering-MineriaDeDatos")
install.packages("hopkins")
knitr::opts_chunk$set(echo = TRUE)
numericas <- datos[,c("popularity","budget","revenue","runtime","genreAmount","productionCoAmount")]
library(dplyr)
library(ggplot2)
library(hopkins)
datos <- read.csv("movies.csv")
wss <- (nrow(moviesCuantiCompleto)-1)*sum(apply(moviesCuantiCompleto,2,var))
library(dplyr)
library(ggplot2)
# Utilizados en el laboratorio
library(hopkins)
library(ggplot2)
library(factoextra)
datos <- read.csv("movies.csv")
#numericas <- datos[,c("popularity","budget","revenue","runtime","genreAmount","productionCoAmount")]
#hopkins()
datos<-datos[complete.cases(read.csv("movies.csv")),]
popularity<-datos[,'popularity']
budget<-datos[,'budget']
revenue<-datos[,'revenue']
runtime<-datos[,'runtime']
voteCount<-datos[,'voteCount']
norm<-data.frame(popularity,budget,revenue,runtime,voteCount)
clustering<-scale(norm)
hopkins(clustering)
wss <- (nrow(moviesCuantiCompleto)-1)*sum(apply(moviesCuantiCompleto,2,var))
wss <- (nrow(moviesCuantiCompleto)-1)*sum(apply(moviesCuantiCompleto,2,var))
wss <- (nrow(moviesCuantiCompleto)-1)*sum(apply(norm,2,var))
wss <- (nrow(norm)-1)*sum(apply(norm,2,var))
for (i in 2:25)
wss[i] <- sum(kmeans(norm, centers=i)$withinss)
plot(1:25, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
noClusters <- 4
wss <- (nrow(norm)-1)*sum(apply(norm,2,var))
for (i in 2:25)
wss[i] <- sum(kmeans(norm, centers=i)$withinss)
plot(1:5, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
wss <- (nrow(norm)-1)*sum(apply(norm,2,var))
for (i in 2:25)
wss[i] <- sum(kmeans(norm, centers=i)$withinss)
plot(1:25, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
noClusters <- 4
wss <- (nrow(norm)-1)*sum(apply(norm,2,var))
for (i in 1:10)
wss[i] <- sum(kmeans(norm, centers=i)$withinss)
plot(1:25, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
wss <- (nrow(norm)-1)*sum(apply(norm,2,var))
for (i in 1:10)
wss[i] <- sum(kmeans(norm, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
noClusters <- 4
wss <- 0
for (i in 1:10)
wss[i] <- sum(kmeans(norm, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
noClusters <- 4
wss <- (nrow(norm)-1)*sum(apply(norm,2,var))
for (i in 1:10)
wss[i] <- sum(kmeans(norm, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
noClusters <- 4
km<-kmeans(moviesCuantiCompleto,noClusters,iter.max =100)
wss <- (nrow(clustering)-1)*sum(apply(clustering,2,var))
for (i in 1:10)
wss[i] <- sum(kmeans(clustering, centers=i)$withinss)
plot(1:10, wss, type="b", xlab="Cantidad de Clusters",  ylab="Cantidad de suma de cuadrados")
km<-kmeans(clustering,noClusters,iter.max =100)
movies$grupo <- km$cluster
km<-kmeans(clustering,NClusters,iter.max =100)
NClusters <- 6
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo <- km$cluster
plotcluster(clustering,km$cluster)
library(dplyr)
library(ggplot2)
# Utilizados en el laboratorio
library(hopkins)
library(ggplot2)
library(factoextra)
library(fpc)
install.packages("fpc")
install.packages("cluster")
library(dplyr)
library(ggplot2)
# Utilizados en el laboratorio
library(hopkins)
library(ggplot2)
library(factoextra)
library(fpc)
library(cluster)
datos <- read.csv("movies.csv")
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo <- km$cluster
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo <- km$cluster
library(dplyr)
library(ggplot2)
# Utilizados en el laboratorio
library(hopkins)
library(ggplot2)
library(factoextra)
library(fpc)
library(cluster)
#datos <- read.csv("movies.csv")
#numericas <- datos[,c("popularity","budget","revenue","runtime","genreAmount","productionCoAmount")]
#hopkins()
datos<-datos[complete.cases(read.csv("movies.csv")),]
popularity<-datos[,'popularity']
budget<-datos[,'budget']
revenue<-datos[,'revenue']
runtime<-datos[,'runtime']
voteCount<-datos[,'voteCount']
norm<-data.frame(popularity,budget,revenue,runtime,voteCount)
clustering<-scale(norm)
hopkins(clustering)
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo <- km$cluster
plotcluster(clustering,km$cluster)
k<-kmeans(Clustering,3,iter.max =100)
k<-kmeans(Clustering,NClusters,iter.max =100)
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,k$cluster)
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,km$cluster)
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,km$cluster)
#silueta
fviz_cluster(k, data = Clustering,geom = "point", ellipse.type = "norm")
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,km$cluster)
#silueta
fviz_cluster(k, data = Clustering,geom = "point", ellipse.type = "norm")
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,km$cluster)
#silueta
fviz_cluster(k, data = clustering,geom = "point", ellipse.type = "norm")
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,km$cluster)
#silueta
fviz_cluster(km, data = clustering,geom = "point", ellipse.type = "norm")
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,km$cluster)
#silueta
fviz_cluster(km, data = clustering,geom = "point", ellipse.type = "norm")
Matrix<- dist(Clustering)
Matrix<- dist(clustering)
hc<-hclust(DistData, method = "ward.D2")
DistData<- dist(clustering)
knitr::opts_chunk$set(fig.width=12, fig.height=8)
fviz_dist(DistData, show_labels = F)
DistData<- dist(clustering)
Matrix<- dist(clustering)
hc<-hclust(DistData, method = "ward.D2")
plot(hc, cex=0.5, axes=FALSE)
Matrix<- dist(clustering)
hc<-hclust(DistData, method = "ward.D2")
plot(hc, cex=0.5, axes=FALSE)
# silueta
rect.hclust(hc,k=3)
groups<-cutree(hc,k=3)
datos$gruposHC<-groups
silhc<-silhouette(groups,DistData)
mean(silhc[,3])
Jerarquico<-mean(silhc[,3])
plot(silhc, cex.names=.4, col=1:3, border = NA)
km<-kmeans(clustering,NClusters,iter.max =100)
datos$grupo<-km$cluster
plotcluster(clustering,km$cluster)
#silueta
fviz_cluster(km, data = clustering,geom = "point", ellipse.type = "norm")
